datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String @id @default(uuid())
  email       String @unique
  password    String
  usdBalance  BigInt @default(500000) // $5000.00 in cents
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  orders      UserOrder[]
  closedOrders ClosedOrder[]
  
  @@map("users")
}

model UserOrder {
  id              String    @id @default(uuid())
  userId          String
  orderType       String    // "buy" or "sell"
  margin          BigInt    // Margin in cents
  leverage        Int
  asset           String    // BTC, ETH, SOL
  openPrice       BigInt    // Price with PRICE_SCALE
  takeProfit      BigInt?   // Optional take profit price
  stopLoss        BigInt?   // Optional stop loss price
  liquidationPrice BigInt?  // Calculated liquidation price
  status          String    @default("open") // "open" or "closed"
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relations
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_orders")
}

model ClosedOrder {
  id              String   @id @default(uuid())
  userId          String
  originalOrderId String
  orderType       String
  margin          BigInt
  leverage        Int
  asset           String
  openPrice       BigInt
  closePrice      BigInt
  pnl             BigInt   // Profit/Loss in cents
  closeReason     String   // "manual", "take_profit", "stop_loss", "liquidation"
  openedAt        DateTime
  closedAt        DateTime @default(now())
  
  // Relations
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("closed_orders")
}